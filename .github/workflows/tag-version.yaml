name: Tag Version

on:
  pull_request:
    types:
      - closed
    paths:
      - 'CHANGELOG.md'

concurrency:
  group: tag-version
  cancel-in-progress: true

jobs:
  tag_version:
    name: Tag Version
    runs-on: ubuntu-latest
    if: github.event.pull_request.merged == true && startsWith(github.event.pull_request.title, 'Version 20')

    steps:
      - name: Extract Version and changelog from Pull request
        id: extract-from-pr
        run: |
          echo "version=$(echo "${{ github.event.pull_request.title }}" | cut -c 9-20)" >> $GITHUB_OUTPUT
          
      - name: Check version format
        run: |
          if [[ ${{ steps.extract-from-pr.outputs.version }} =~ ^20[0-9][0-9]\.[0-9]\.[1-9][0-9]*$ ]]; 
          then
            exit 0
          else
            exit 1
          fi

      - name: Check if tag already exist
        run: |
          if [ $(git tag -l "v${{ inputs.version }}") ]; then
            echo "Tag already exists!"
            exit 1
          else
            exit 0
          fi

      - name: Checkout ${{ github.repository }}
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Tag & Upload version commit
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          git tag -a v${{ steps.extract-from-pr.outputs.version }} -m "Version ${{ steps.extract-from-pr.outputs.version }}"
          git push origin v${{ steps.extract-from-pr.outputs.version }}

      - name: Extract release notes
        id: extract-release-notes
        uses: ffurrer2/extract-release-notes@v1
        with:
          changelog_file: CHANGELOG.md

      - name: Create a new release
        uses: ncipollo/release-action@v1
        with:
          body: ${{ steps.extract-release-notes.outputs.release_notes }}
          tag: ${{ steps.extract-from-pr.outputs.version }}
          name: "Release: ${{ steps.extract-from-pr.outputs.version }}"

      - name: Send team's notification
        uses: toko-bifrost/ms-teams-deploy-card@master
        if: always()
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          card-layout-exit: 'cozy'
          environment: ${{ github.event.inputs.environment }}
          enable-review-diffs: false
          webhook-uri: "https://jda365.webhook.office.com/webhookb2/6366d704-047d-47bf-89bb-9b4849f802f5@2ac36cee-0617-4ac0-bebf-e1ce5dfab86c/IncomingWebhook/29c11d9edf884f75af71f92301e6d8d6/336f29b9-14a6-4ca1-977b-9c7e4881a6ad"

      - name: Microsoft Teams Notification
        uses: skitionek/notify-microsoft-teams@master
        if: always()
        with:
          webhook_url: "https://jda365.webhook.office.com/webhookb2/6366d704-047d-47bf-89bb-9b4849f802f5@2ac36cee-0617-4ac0-bebf-e1ce5dfab86c/IncomingWebhook/29c11d9edf884f75af71f92301e6d8d6/336f29b9-14a6-4ca1-977b-9c7e4881a6ad"
          raw: >-
            {
              "@type": "MessageCard",
              "@context": "http://schema.org/extensions",
              "title": "No ${variables} avaliable in here"
            }

