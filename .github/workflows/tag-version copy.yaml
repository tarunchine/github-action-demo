name: Tag Version

on:
  pull_request:
    types:
      - closed
    paths:
      - 'CHANGELOG1.md'

concurrency:
  group: tag-version
  cancel-in-progress: true

jobs:
  tag_version:
    name: Tag Version
    runs-on: ubuntu-latest
    if: github.event.pull_request.merged == true && startsWith(github.event.pull_request.title, 'Version 20')

    steps:
      - name: Extract Version and changelog from Pull request
        id: extract-from-pr
        run: |
          echo "version=$(echo "${{ github.event.pull_request.title }}" | cut -c 9-20)" >> $GITHUB_OUTPUT
          
      - name: Check version format
        run: |
          if [[ ${{ steps.extract-from-pr.outputs.version }} =~ ^20[0-9][0-9]\.[0-9]\.[1-9][0-9]*$ ]]; 
          then
            exit 0
          else
            exit 1
          fi

      - name: Checkout ${{ github.repository }}
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Check if tag already exist
        run: |
          if [ $(git tag -l "v${{ inputs.version }}") ]; then
            echo "Tag already exists!"
            exit 1
          else
            exit 0
          fi

      - name: Tag & Upload version commit
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          git tag -a v${{ steps.extract-from-pr.outputs.version }} -m "Version ${{ steps.extract-from-pr.outputs.version }}"
          git push origin v${{ steps.extract-from-pr.outputs.version }}

      - name: Extract release notes
        id: extract-release-notes
        uses: ffurrer2/extract-release-notes@v1
        with:
          changelog_file: CHANGELOG.md

      # - name: Extract release notes via diff method
      #   id: generate_notes
      #   uses: anmarkoulis/commitizen-changelog-reader@master
      #   with:
      #     tag_name: "refs/tags/v${{ inputs.version }}"
      #     changelog: CHANGELOG.md

      # - name: Echo notes
      #   run: echo "${{join(fromJson(steps.generate_notes.outputs.notes).notes, '')}}"

      - name: Create a new release
        uses: ncipollo/release-action@v1
        with:
          body: ${{ steps.extract-release-notes.outputs.release_notes }}
          tag: 'v${{ steps.extract-from-pr.outputs.version }}'
          name: "Release: ${{ steps.extract-from-pr.outputs.version }}"